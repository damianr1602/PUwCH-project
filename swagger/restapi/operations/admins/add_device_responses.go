// Code generated by go-swagger; DO NOT EDIT.

package admins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// AddDeviceCreatedCode is the HTTP code returned for type AddDeviceCreated
const AddDeviceCreatedCode int = 201

/*AddDeviceCreated item created

swagger:response addDeviceCreated
*/
type AddDeviceCreated struct {
}

// NewAddDeviceCreated creates AddDeviceCreated with default headers values
func NewAddDeviceCreated() *AddDeviceCreated {

	return &AddDeviceCreated{}
}

// WriteResponse to the client
func (o *AddDeviceCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// AddDeviceBadRequestCode is the HTTP code returned for type AddDeviceBadRequest
const AddDeviceBadRequestCode int = 400

/*AddDeviceBadRequest invalid input, object invalid

swagger:response addDeviceBadRequest
*/
type AddDeviceBadRequest struct {
}

// NewAddDeviceBadRequest creates AddDeviceBadRequest with default headers values
func NewAddDeviceBadRequest() *AddDeviceBadRequest {

	return &AddDeviceBadRequest{}
}

// WriteResponse to the client
func (o *AddDeviceBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// AddDeviceConflictCode is the HTTP code returned for type AddDeviceConflict
const AddDeviceConflictCode int = 409

/*AddDeviceConflict an existing item already exists

swagger:response addDeviceConflict
*/
type AddDeviceConflict struct {
}

// NewAddDeviceConflict creates AddDeviceConflict with default headers values
func NewAddDeviceConflict() *AddDeviceConflict {

	return &AddDeviceConflict{}
}

// WriteResponse to the client
func (o *AddDeviceConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}
