// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateMovieHandlerFunc turns a function with the right signature into a update movie handler
type UpdateMovieHandlerFunc func(UpdateMovieParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateMovieHandlerFunc) Handle(params UpdateMovieParams) middleware.Responder {
	return fn(params)
}

// UpdateMovieHandler interface for that can handle valid update movie params
type UpdateMovieHandler interface {
	Handle(UpdateMovieParams) middleware.Responder
}

// NewUpdateMovie creates a new http.Handler for the update movie operation
func NewUpdateMovie(ctx *middleware.Context, handler UpdateMovieHandler) *UpdateMovie {
	return &UpdateMovie{Context: ctx, Handler: handler}
}

/*UpdateMovie swagger:route PUT /movies updateMovie

Update existing movie

Update existing movie

*/
type UpdateMovie struct {
	Context *middleware.Context
	Handler UpdateMovieHandler
}

func (o *UpdateMovie) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateMovieParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
