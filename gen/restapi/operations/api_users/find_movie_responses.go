// Code generated by go-swagger; DO NOT EDIT.

package api_users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/damianr1602/chmuryrest/gen/models"
)

// FindMovieOKCode is the HTTP code returned for type FindMovieOK
const FindMovieOKCode int = 200

/*FindMovieOK search result matching criteria

swagger:response findMovieOK
*/
type FindMovieOK struct {

	/*
	  In: Body
	*/
	Payload *models.Movie `json:"body,omitempty"`
}

// NewFindMovieOK creates FindMovieOK with default headers values
func NewFindMovieOK() *FindMovieOK {

	return &FindMovieOK{}
}

// WithPayload adds the payload to the find movie o k response
func (o *FindMovieOK) WithPayload(payload *models.Movie) *FindMovieOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find movie o k response
func (o *FindMovieOK) SetPayload(payload *models.Movie) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindMovieOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// FindMovieNotFoundCode is the HTTP code returned for type FindMovieNotFound
const FindMovieNotFoundCode int = 404

/*FindMovieNotFound The specified resource was not found

swagger:response findMovieNotFound
*/
type FindMovieNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Result `json:"body,omitempty"`
}

// NewFindMovieNotFound creates FindMovieNotFound with default headers values
func NewFindMovieNotFound() *FindMovieNotFound {

	return &FindMovieNotFound{}
}

// WithPayload adds the payload to the find movie not found response
func (o *FindMovieNotFound) WithPayload(payload *models.Result) *FindMovieNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find movie not found response
func (o *FindMovieNotFound) SetPayload(payload *models.Result) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindMovieNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
